openapi: 3.0.3
info:
  title: Intelligent Email Agent API
  description: |
    A comprehensive API for intelligent email analysis, categorization, and management.
    
    ## Features
    - **Email Processing**: Connect to IMAP servers and process emails
    - **AI Analysis**: Analyze urgency, generate summaries, and provide follow-up suggestions
    - **Categorization**: Automatically categorize emails by type and priority
    - **Notifications**: Send notifications via Slack, Telegram, and WhatsApp
    - **Voice Summaries**: Generate voice summaries using TTS
    - **Configuration Management**: Manage email settings and VIP contacts
    - **Scheduling**: Automated daily summaries and reminders
    
    ## Authentication
    This API uses email credentials for IMAP access. Ensure your email provider supports IMAP and has appropriate security settings enabled.
    
    ## Rate Limits
    - Email processing: 10 requests per minute
    - Notifications: 50 requests per minute
    - Voice generation: 20 requests per minute
    
  version: 1.0.0
  contact:
    name: Email Agent Support
    email: support@emailagent.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8000
    description: Development server
  - url: https://api.emailagent.com
    description: Production server

tags:
  - name: Email Analysis
    description: Email processing and analysis endpoints
  - name: Notifications
    description: Multi-channel notification endpoints
  - name: Voice
    description: Text-to-speech and voice summary endpoints
  - name: Configuration
    description: System configuration and VIP contact management

paths:
  # Email Analysis Endpoints
  /api/email/process-emails:
    post:
      tags:
        - Email Analysis
      summary: Process emails from IMAP server
      description: |
        Connect to an IMAP server and process emails for analysis, categorization, and storage.
        This endpoint will fetch emails, analyze them using AI, categorize them, and store the results.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailProcessingRequest'
            example:
              email_address: "user@example.com"
              password: "app-password"
              imap_server: "imap.gmail.com"
              imap_port: 993
              use_ssl: true
              limit: 50
      responses:
        '200':
          description: Emails processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailProcessingResponse'
              example:
                total_processed: 25
                total_saved: 25
                errors: []
                processing_time: 15.5
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/email/daily-summary/{date}:
    get:
      tags:
        - Email Analysis
      summary: Get daily email summary
      description: Retrieve a comprehensive summary of emails for a specific date
      parameters:
        - name: date
          in: path
          required: true
          description: Date in YYYY-MM-DD format
          schema:
            type: string
            pattern: '^\d{4}-\d{2}-\d{2}$'
          example: "2024-01-15"
      responses:
        '200':
          description: Daily summary retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailySummary'
              example:
                date: "2024-01-15"
                total_emails: 25
                categories:
                  work: 15
                  personal: 5
                  promotions: 3
                  social: 2
                urgent_emails: []
                unread_emails: []
                response_reminders: []
                priority_breakdown:
                  low: 8
                  medium: 12
                  high: 5
        '404':
          description: No summary found for the specified date
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/email/emails/{date}:
    get:
      tags:
        - Email Analysis
      summary: Get emails by date
      description: Retrieve all processed emails for a specific date
      parameters:
        - name: date
          in: path
          required: true
          description: Date in YYYY-MM-DD format
          schema:
            type: string
            pattern: '^\d{4}-\d{2}-\d{2}$'
          example: "2024-01-15"
        - name: category
          in: query
          required: false
          description: Filter by email category
          schema:
            type: string
            enum: [work, personal, promotions, social, urgent, meetings, deadlines, other]
        - name: priority
          in: query
          required: false
          description: Filter by priority level
          schema:
            type: string
            enum: [low, medium, high]
        - name: limit
          in: query
          required: false
          description: Maximum number of emails to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
      responses:
        '200':
          description: Emails retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmailSummary'
              example:
                - id: "email-1"
                  subject: "Project Update"
                  sender: "John Doe"
                  sender_email: "john@company.com"
                  received_at: "2024-01-15T10:30:00"
                  category: "work"
                  priority: "medium"
                  summary: "Project status update with timeline"
                  is_read: false
                  is_replied: false
                  urgency_score: 0.6
                  action_required: true
                  follow_up_suggestions: ["Reply with status update", "Schedule follow-up meeting"]

  /api/email/emails/{email_id}/mark-read:
    put:
      tags:
        - Email Analysis
      summary: Mark email as read
      description: Mark a specific email as read
      parameters:
        - name: email_id
          in: path
          required: true
          description: Unique email identifier
          schema:
            type: string
          example: "email-1"
      responses:
        '200':
          description: Email marked as read successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          description: Email not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/email/emails/{email_id}/mark-replied:
    put:
      tags:
        - Email Analysis
      summary: Mark email as replied
      description: Mark a specific email as replied to
      parameters:
        - name: email_id
          in: path
          required: true
          description: Unique email identifier
          schema:
            type: string
          example: "email-1"
      responses:
        '200':
          description: Email marked as replied successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          description: Email not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  # Notification Endpoints
  /api/notifications/send:
    post:
      tags:
        - Notifications
      summary: Send notification
      description: Send a notification through specified channels
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
            example:
              message: "You have 5 new emails requiring attention"
              channels: ["slack", "telegram"]
      responses:
        '200':
          description: Notification sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
              example:
                slack: true
                telegram: true
                whatsapp: false
        '400':
          description: Invalid notification request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/notifications/daily-summary:
    post:
      tags:
        - Notifications
      summary: Send daily summary notification
      description: Send a formatted daily summary notification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DailySummary'
      responses:
        '200':
          description: Daily summary notification sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

  /api/notifications/urgent-email:
    post:
      tags:
        - Notifications
      summary: Send urgent email notification
      description: Send an immediate notification for urgent emails
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UrgentEmailNotification'
      responses:
        '200':
          description: Urgent email notification sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

  # Voice Endpoints
  /api/voice/generate-voice-summary:
    post:
      tags:
        - Voice
      summary: Generate voice summary
      description: Convert text to speech and return audio file
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoiceGenerationRequest'
            example:
              text: "You have 5 new emails today. 3 are work-related and 2 are personal."
              voice: "en-US-Standard-A"
      responses:
        '200':
          description: Voice summary generated successfully
          content:
            audio/mpeg:
              schema:
                type: string
                format: binary
        '400':
          description: Invalid voice generation request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/voice/available-voices:
    get:
      tags:
        - Voice
      summary: Get available voices
      description: Retrieve list of available TTS voices
      responses:
        '200':
          description: Available voices retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Voice'
              example:
                - name: "en-US-Standard-A"
                  language: "en-US"
                  gender: "female"
                - name: "en-US-Standard-B"
                  language: "en-US"
                  gender: "male"

  # Configuration Endpoints
  /api/config/configuration/{config_key}:
    get:
      tags:
        - Configuration
      summary: Get configuration
      description: Retrieve configuration for a specific key
      parameters:
        - name: config_key
          in: path
          required: true
          description: Configuration key
          schema:
            type: string
          example: "email_config"
      responses:
        '200':
          description: Configuration retrieved successfully
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
              example:
                email_address: "user@example.com"
                imap_server: "imap.gmail.com"
                imap_port: 993
                use_ssl: true
        '404':
          description: Configuration not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - Configuration
      summary: Save configuration
      description: Save configuration for a specific key
      parameters:
        - name: config_key
          in: path
          required: true
          description: Configuration key
          schema:
            type: string
          example: "email_config"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
            example:
              email_address: "user@example.com"
              imap_server: "imap.gmail.com"
              imap_port: 993
              use_ssl: true
      responses:
        '200':
          description: Configuration saved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

  /api/config/vip-contacts:
    get:
      tags:
        - Configuration
      summary: Get VIP contacts
      description: Retrieve all VIP contacts
      responses:
        '200':
          description: VIP contacts retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VIPContact'
              example:
                - email: "ceo@company.com"
                  name: "CEO"
                  priority_level: "high"
                - email: "manager@company.com"
                  name: "Manager"
                  priority_level: "medium"

    post:
      tags:
        - Configuration
      summary: Add VIP contact
      description: Add a new VIP contact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VIPContact'
            example:
              email: "newvip@company.com"
              name: "New VIP"
              priority_level: "high"
      responses:
        '200':
          description: VIP contact added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'

  /api/config/vip-contacts/{email}:
    delete:
      tags:
        - Configuration
      summary: Delete VIP contact
      description: Remove a VIP contact
      parameters:
        - name: email
          in: path
          required: true
          description: Email address of VIP contact
          schema:
            type: string
          example: "vip@company.com"
      responses:
        '200':
          description: VIP contact deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          description: VIP contact not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    EmailProcessingRequest:
      type: object
      required:
        - email_address
        - password
        - imap_server
        - imap_port
        - use_ssl
      properties:
        email_address:
          type: string
          format: email
          description: Email address for IMAP connection
        password:
          type: string
          description: Email password or app password
        imap_server:
          type: string
          description: IMAP server hostname
        imap_port:
          type: integer
          minimum: 1
          maximum: 65535
          description: IMAP server port
        use_ssl:
          type: boolean
          description: Whether to use SSL/TLS connection
        limit:
          type: integer
          minimum: 1
          maximum: 1000
          default: 50
          description: Maximum number of emails to process

    EmailProcessingResponse:
      type: object
      properties:
        total_processed:
          type: integer
          description: Total number of emails processed
        total_saved:
          type: integer
          description: Total number of emails saved to database
        errors:
          type: array
          items:
            type: string
          description: List of processing errors
        processing_time:
          type: number
          format: float
          description: Processing time in seconds

    EmailSummary:
      type: object
      properties:
        id:
          type: string
          description: Unique email identifier
        subject:
          type: string
          description: Email subject
        sender:
          type: string
          description: Sender name
        sender_email:
          type: string
          format: email
          description: Sender email address
        received_at:
          type: string
          format: date-time
          description: Email received timestamp
        category:
          type: string
          enum: [work, personal, promotions, social, urgent, meetings, deadlines, other]
          description: Email category
        priority:
          type: string
          enum: [low, medium, high]
          description: Email priority level
        summary:
          type: string
          description: AI-generated summary
        is_read:
          type: boolean
          description: Whether email has been read
        is_replied:
          type: boolean
          description: Whether email has been replied to
        urgency_score:
          type: number
          format: float
          minimum: 0
          maximum: 1
          description: Urgency score (0-1)
        action_required:
          type: boolean
          description: Whether action is required
        follow_up_suggestions:
          type: array
          items:
            type: string
          description: AI-generated follow-up suggestions

    DailySummary:
      type: object
      properties:
        date:
          type: string
          format: date
          description: Summary date
        total_emails:
          type: integer
          description: Total number of emails
        categories:
          type: object
          additionalProperties:
            type: integer
          description: Email count by category
        urgent_emails:
          type: array
          items:
            $ref: '#/components/schemas/EmailSummary'
          description: List of urgent emails
        unread_emails:
          type: array
          items:
            $ref: '#/components/schemas/EmailSummary'
          description: List of unread emails
        response_reminders:
          type: array
          items:
            $ref: '#/components/schemas/EmailSummary'
          description: Emails requiring response
        priority_breakdown:
          type: object
          properties:
            low:
              type: integer
            medium:
              type: integer
            high:
              type: integer
          description: Email count by priority level

    NotificationRequest:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Notification message
        channels:
          type: array
          items:
            type: string
            enum: [slack, telegram, whatsapp]
          default: ["slack"]
          description: Notification channels

    NotificationResponse:
      type: object
      properties:
        slack:
          type: boolean
          description: Slack notification status
        telegram:
          type: boolean
          description: Telegram notification status
        whatsapp:
          type: boolean
          description: WhatsApp notification status

    UrgentEmailNotification:
      type: object
      required:
        - subject
        - sender
        - sender_email
        - received_at
        - summary
      properties:
        subject:
          type: string
          description: Email subject
        sender:
          type: string
          description: Sender name
        sender_email:
          type: string
          format: email
          description: Sender email
        received_at:
          type: string
          format: date-time
          description: Email received timestamp
        summary:
          type: string
          description: Email summary

    VoiceGenerationRequest:
      type: object
      required:
        - text
      properties:
        text:
          type: string
          description: Text to convert to speech
        voice:
          type: string
          default: "en-US-Standard-A"
          description: Voice to use for TTS

    Voice:
      type: object
      properties:
        name:
          type: string
          description: Voice name
        language:
          type: string
          description: Voice language
        gender:
          type: string
          enum: [male, female]
          description: Voice gender

    VIPContact:
      type: object
      required:
        - email
        - name
        - priority_level
      properties:
        email:
          type: string
          format: email
          description: VIP contact email
        name:
          type: string
          description: VIP contact name
        priority_level:
          type: string
          enum: [low, medium, high]
          description: Priority level for this contact

    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          description: Success message

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message
        details:
          type: string
          description: Additional error details
        timestamp:
          type: string
          format: date-time
          description: Error timestamp

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication

security:
  - ApiKeyAuth: []

externalDocs:
  description: Find more info about the Intelligent Email Agent
  url: https://github.com/emailagent/docs 